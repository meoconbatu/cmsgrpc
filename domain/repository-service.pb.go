// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/meoconbatu/cmsgrpc/domain/proto-files/repository-service.proto

package domain

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreatePageResponse struct {
	CreatedPageId        int64    `protobuf:"varint,1,opt,name=createdPageId,proto3" json:"createdPageId,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePageResponse) Reset()         { *m = CreatePageResponse{} }
func (m *CreatePageResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePageResponse) ProtoMessage()    {}
func (*CreatePageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cada6e543bc4fde7, []int{0}
}

func (m *CreatePageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePageResponse.Unmarshal(m, b)
}
func (m *CreatePageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePageResponse.Marshal(b, m, deterministic)
}
func (m *CreatePageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePageResponse.Merge(m, src)
}
func (m *CreatePageResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePageResponse.Size(m)
}
func (m *CreatePageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePageResponse proto.InternalMessageInfo

func (m *CreatePageResponse) GetCreatedPageId() int64 {
	if m != nil {
		return m.CreatedPageId
	}
	return 0
}

func (m *CreatePageResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_cada6e543bc4fde7, []int{1}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetOnePageRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOnePageRequest) Reset()         { *m = GetOnePageRequest{} }
func (m *GetOnePageRequest) String() string { return proto.CompactTextString(m) }
func (*GetOnePageRequest) ProtoMessage()    {}
func (*GetOnePageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cada6e543bc4fde7, []int{2}
}

func (m *GetOnePageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOnePageRequest.Unmarshal(m, b)
}
func (m *GetOnePageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOnePageRequest.Marshal(b, m, deterministic)
}
func (m *GetOnePageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOnePageRequest.Merge(m, src)
}
func (m *GetOnePageRequest) XXX_Size() int {
	return xxx_messageInfo_GetOnePageRequest.Size(m)
}
func (m *GetOnePageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOnePageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOnePageRequest proto.InternalMessageInfo

func (m *GetOnePageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CreatePageResponse)(nil), "domain.CreatePageResponse")
	proto.RegisterType((*Error)(nil), "domain.Error")
	proto.RegisterType((*GetOnePageRequest)(nil), "domain.GetOnePageRequest")
}

func init() {
	proto.RegisterFile("github.com/meoconbatu/cmsgrpc/domain/proto-files/repository-service.proto", fileDescriptor_cada6e543bc4fde7)
}

var fileDescriptor_cada6e543bc4fde7 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x51, 0xc1, 0x4e, 0xe3, 0x30,
	0x14, 0x54, 0xba, 0xdb, 0xac, 0xea, 0x6e, 0x57, 0xda, 0x77, 0x40, 0x25, 0x5c, 0xaa, 0xb6, 0x42,
	0xbd, 0xd4, 0x29, 0x45, 0x7c, 0x40, 0x41, 0x15, 0xea, 0x09, 0x14, 0x6e, 0x5c, 0x50, 0xe2, 0xbc,
	0x1a, 0x4b, 0x49, 0x5e, 0xb0, 0x1d, 0x24, 0x7e, 0x88, 0xef, 0x44, 0xb1, 0x9b, 0x43, 0x05, 0x07,
	0x24, 0x6e, 0x7e, 0x33, 0xe3, 0x79, 0xe3, 0x31, 0xdb, 0x49, 0x65, 0x9f, 0x9b, 0x8c, 0x0b, 0x2a,
	0xe3, 0x12, 0x49, 0x50, 0x95, 0xa5, 0xb6, 0x89, 0x45, 0x69, 0xa4, 0xae, 0x45, 0x9c, 0x53, 0x99,
	0xaa, 0x2a, 0xae, 0x35, 0x59, 0x5a, 0xee, 0x55, 0x81, 0x26, 0xd6, 0x58, 0x93, 0x51, 0x96, 0xf4,
	0xdb, 0xd2, 0xa0, 0x7e, 0x55, 0x02, 0xb9, 0xa3, 0x21, 0xf4, 0xe2, 0x68, 0xf3, 0x03, 0x4b, 0x6f,
	0x15, 0x9d, 0x49, 0x22, 0x59, 0xa0, 0x17, 0x65, 0xcd, 0x3e, 0xc6, 0xb2, 0xb6, 0x07, 0x72, 0xfa,
	0xc4, 0xe0, 0x46, 0x63, 0x6a, 0xf1, 0x3e, 0x95, 0x98, 0xa0, 0xa9, 0xa9, 0x32, 0x08, 0x73, 0x36,
	0x12, 0x0e, 0xcd, 0x5b, 0x78, 0x97, 0x8f, 0x83, 0x49, 0xb0, 0xf8, 0x95, 0x1c, 0x83, 0x30, 0x63,
	0x7d, 0xd4, 0x9a, 0xf4, 0xb8, 0x37, 0x09, 0x16, 0xc3, 0xf5, 0x88, 0xfb, 0x34, 0x7c, 0xdb, 0x82,
	0x89, 0xe7, 0xa6, 0x57, 0xac, 0xef, 0x66, 0x00, 0xf6, 0x5b, 0x50, 0x8e, 0xce, 0x6a, 0x90, 0xb8,
	0x33, 0x8c, 0xd9, 0x9f, 0x12, 0x8d, 0x49, 0x25, 0x3a, 0x8f, 0x41, 0xd2, 0x8d, 0xd3, 0x19, 0xfb,
	0x7f, 0x8b, 0xf6, 0xae, 0x3a, 0xe4, 0x7a, 0x69, 0xd0, 0x58, 0xf8, 0xc7, 0x7a, 0x2a, 0x3f, 0x18,
	0xf4, 0x54, 0xbe, 0x7e, 0x0f, 0xd8, 0xb0, 0xe5, 0x1f, 0x7c, 0x75, 0xb0, 0x66, 0xa1, 0x4f, 0x08,
	0x7f, 0xbb, 0x2c, 0x2d, 0x1d, 0x45, 0xdd, 0xf4, 0xc5, 0x53, 0x2f, 0x58, 0x28, 0xdd, 0x22, 0x38,
	0xed, 0x54, 0x9f, 0x16, 0x47, 0x47, 0x76, 0xb0, 0x72, 0x57, 0x36, 0x45, 0x01, 0x27, 0xdc, 0x77,
	0xcb, 0xbb, 0x6e, 0xf9, 0xb6, 0xed, 0xf6, 0x58, 0xbf, 0x0a, 0xae, 0xcf, 0x1f, 0xe7, 0xdf, 0xf9,
	0xc7, 0x2c, 0x74, 0x3e, 0x97, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x43, 0xec, 0xa6, 0x49,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PageServiceClient is the client API for PageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PageServiceClient interface {
	Create(ctx context.Context, in *Page, opts ...grpc.CallOption) (*CreatePageResponse, error)
	GetOne(ctx context.Context, in *GetOnePageRequest, opts ...grpc.CallOption) (*Page, error)
	GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (PageService_GetAllClient, error)
}

type pageServiceClient struct {
	cc *grpc.ClientConn
}

func NewPageServiceClient(cc *grpc.ClientConn) PageServiceClient {
	return &pageServiceClient{cc}
}

func (c *pageServiceClient) Create(ctx context.Context, in *Page, opts ...grpc.CallOption) (*CreatePageResponse, error) {
	out := new(CreatePageResponse)
	err := c.cc.Invoke(ctx, "/domain.PageService/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pageServiceClient) GetOne(ctx context.Context, in *GetOnePageRequest, opts ...grpc.CallOption) (*Page, error) {
	out := new(Page)
	err := c.cc.Invoke(ctx, "/domain.PageService/getOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pageServiceClient) GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (PageService_GetAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PageService_serviceDesc.Streams[0], "/domain.PageService/getAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &pageServiceGetAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PageService_GetAllClient interface {
	Recv() (*Page, error)
	grpc.ClientStream
}

type pageServiceGetAllClient struct {
	grpc.ClientStream
}

func (x *pageServiceGetAllClient) Recv() (*Page, error) {
	m := new(Page)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PageServiceServer is the server API for PageService service.
type PageServiceServer interface {
	Create(context.Context, *Page) (*CreatePageResponse, error)
	GetOne(context.Context, *GetOnePageRequest) (*Page, error)
	GetAll(*empty.Empty, PageService_GetAllServer) error
}

// UnimplementedPageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPageServiceServer struct {
}

func (*UnimplementedPageServiceServer) Create(ctx context.Context, req *Page) (*CreatePageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPageServiceServer) GetOne(ctx context.Context, req *GetOnePageRequest) (*Page, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOne not implemented")
}
func (*UnimplementedPageServiceServer) GetAll(req *empty.Empty, srv PageService_GetAllServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}

func RegisterPageServiceServer(s *grpc.Server, srv PageServiceServer) {
	s.RegisterService(&_PageService_serviceDesc, srv)
}

func _PageService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Page)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PageServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/domain.PageService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PageServiceServer).Create(ctx, req.(*Page))
	}
	return interceptor(ctx, in, info, handler)
}

func _PageService_GetOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnePageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PageServiceServer).GetOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/domain.PageService/GetOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PageServiceServer).GetOne(ctx, req.(*GetOnePageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PageService_GetAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PageServiceServer).GetAll(m, &pageServiceGetAllServer{stream})
}

type PageService_GetAllServer interface {
	Send(*Page) error
	grpc.ServerStream
}

type pageServiceGetAllServer struct {
	grpc.ServerStream
}

func (x *pageServiceGetAllServer) Send(m *Page) error {
	return x.ServerStream.SendMsg(m)
}

var _PageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "domain.PageService",
	HandlerType: (*PageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _PageService_Create_Handler,
		},
		{
			MethodName: "getOne",
			Handler:    _PageService_GetOne_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getAll",
			Handler:       _PageService_GetAll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/meoconbatu/cmsgrpc/domain/proto-files/repository-service.proto",
}
